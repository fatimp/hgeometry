cabal-version:      3.4
name:               hgeometry-vector
version:            1.0.0.0
-- synopsis:
-- description:
license:            MIT
license-file:       LICENSE
author:             Frank Staals
maintainer:         frank@fstaals.net
-- copyright:
category:           Geometry
build-type:         Simple
extra-doc-files:    CHANGELOG.md
-- extra-source-files:

--------------------------------------------------------------------------------

common setup
    ghc-options: -O2 -Wall -fno-warn-unticked-promoted-constructors -fno-warn-type-defaults

    build-depends:
        base                    >= 4.16.4.0
      , containers              >= 0.6
      , vector                  >= 0.13
      , lens                    >= 5.2
      , deepseq                 >= 1.1
      , semigroupoids           >= 5
      , semigroups              >= 0.18
      , random                  >= 1.2
      , witherable              >= 0.4

      , ghc-typelits-natnormalise >= 0.7.7
      , ghc-typelits-knownnat     >= 0.7.6

    default-language: GHC2021

    default-extensions:
        DataKinds
      , TypeFamilies
      , GADTs
      , KindSignatures
      , ScopedTypeVariables
      , DerivingStrategies
      , DerivingVia
      , GeneralizedNewtypeDeriving
      , DeriveGeneric
      , DeriveFunctor
      , PatternSynonyms
      , TupleSections
      , LambdaCase
      , ViewPatterns
      , FunctionalDependencies

common test-setup
    build-depends:
        hspec                   >= 2.9
      , QuickCheck              >= 2.10
      , quickcheck-instances

--------------------------------------------------------------------------------
-- * Main Library ; signature

library
    import:           setup
    exposed-modules:
      -- HGeometry.Vector.Metric.Radical

    reexported-modules:
        HGeometry.Properties
      -- , HGeometry.Vector
      , HGeometry.Vector.Additive
      , HGeometry.Vector.Metric

    -- other-modules:
    -- other-extensions:
    hs-source-dirs:   src
    build-depends:
        hgeometry-vector:sig-vector
      , hgeometry-vector:shared

-- I wonder if we should create e.g. a 'fractional' library that would export
-- all *.Fractional modules,
--

--------------------------------------------------------------------------------
-- * Shared

-- Don't use any signatures here; so that either a sig or an implementation can import this
-- library

library shared
    import:           setup
    -- visibility: public
    exposed-modules:
      HGeometry.Properties
    hs-source-dirs: src-shared

--------------------------------------------------------------------------------
-- * Base Signatures, i.e. R and D.

library sig-num
    import:           setup
    visibility: public
    signatures:
      R
    hs-source-dirs: sig-num

library sig-fractional
    import:           setup
    visibility: public
    signatures:
      R
    hs-source-dirs: sig-fractional

library sig-random
    import:           setup
    visibility: public
    signatures:
      R
    hs-source-dirs: sig-random

library sig-dim
    import:           setup
    visibility: public
    signatures:
      D
    hs-source-dirs: sig-dim

--------------------------------------------------------------------------------
-- * Signatures for everything that is vector-like.

library sig-vector
    import:           setup
    visibility: public
    signatures:
      Vector
      Vector.Additive

    exposed-modules:
      HGeometry.Vector.Additive
      HGeometry.Vector.Metric

    -- other-modules:
    hs-source-dirs: sig-vector
    build-depends:
          hgeometry-vector:sig-num
        , hgeometry-vector:sig-dim
        , hgeometry-vector:shared

--------------------------------------------------------------------------------

library sig-vector-fractional
    import:           setup
    visibility: public
    exposed-modules:
      HGeometry.Vector.Additive.Fractional

    -- other-modules:
    hs-source-dirs: sig-vector-fractional
    build-depends:
          hgeometry-vector:sig-vector
        , hgeometry-vector:sig-fractional

-- --------------------------------------------------------------------------------
-- -- * Additive Signature

-- library additive
--   import: setup
--   build-depends:
--       hgeometry-vector
--     , hgeometry-vector:vector2
--   mixins:
--       hgeometry-vector requires ( HGeometry.Sigs.Vector          as HGeometry.Vector.Vector2
--                                 , HGeometry.Sigs.Vector.Additive as HGeometry.Vector.Vector2
--                                 )

--------------------------------------------------------------------------------
-- * NumType Implementations:

library numtypes
  import: setup
  visibility: public
  hs-source-dirs: numtypes
  exposed-modules:
    Int
    Int32
    Double
    Float

--------------------------------------------------------------------------------
-- * Dimension implementations ; these feel a bit silly.

library dimensions
  import: setup
  -- visibility: public
  hs-source-dirs: dimensions
  exposed-modules:
    One
    Two
    Three
    Four

-----------------------------------------------------------------------
-- * Vector Implementations

library vector2
  import: setup
  visibility: public
  hs-source-dirs: src-vector2
  exposed-modules:
    HGeometry.Vector.Vector2
  build-depends:
      hgeometry-vector:sig-num
    , hgeometry-vector:shared

--------------------------------------------------------------------------------

test-suite hgeometry-vector-test
    import:           setup, test-setup
    -- other-modules:
    -- other-extensions:
    type:             exitcode-stdio-1.0
    hs-source-dirs:   test
    main-is:          Main.hs
    build-depends:
         hgeometry-vector:vector2
       , hgeometry-vector:numtypes
       , hgeometry-vector:sig-vector
    mixins:
         hgeometry-vector:numtypes (Int as R)
       , hgeometry-vector:sig-vector
           requires
           ( Vector          as HGeometry.Vector.Vector2
           , Vector.Additive as HGeometry.Vector.Vector2
           , D               as HGeometry.Vector.Vector2
           )
