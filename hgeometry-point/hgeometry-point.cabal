cabal-version:      3.4
name:               hgeometry-point
version:            1.0.0.0
-- synopsis:
-- description:
license:            MIT
license-file:       LICENSE
author:             Frank Staals
maintainer:         frank@fstaals.net
-- copyright:
category:           Geometry
build-type:         Simple
extra-doc-files:    CHANGELOG.md
-- extra-source-files:

--------------------------------------------------------------------------------

common setup
    ghc-options: -O2 -Wall -fno-warn-unticked-promoted-constructors -fno-warn-type-defaults

    build-depends:
        base                    >= 4.16.4.0
      , hgeometry-vector        >= 1.0.0.0
      , containers              >= 0.6
      , vector                  >= 0.13
      , lens                    >= 5.2
      , deepseq                 >= 1.1
      , semigroupoids           >= 5
      , semigroups              >= 0.18
      , random                  >= 1.2
      , witherable              >= 0.4

      , ghc-typelits-natnormalise >= 0.7.7
      , ghc-typelits-knownnat     >= 0.7.6

    default-language: GHC2021

    default-extensions:
        DataKinds
      , TypeFamilies
      , GADTs
      , KindSignatures
      , ScopedTypeVariables
      , DerivingStrategies
      , DerivingVia
      , GeneralizedNewtypeDeriving
      , DeriveGeneric
      , DeriveFunctor
      , PatternSynonyms
      , TupleSections
      , LambdaCase
      , ViewPatterns
      , FunctionalDependencies

--------------------------------------------------------------------------------
-- * Main Library

library
    import:           setup
    exposed-modules:
      HGeometry.Point.Common
      HGeometry.Point.Affine
      -- HGeometry.Vector.Metric
      -- HGeometry.Vector.Metric.Radical

    -- re-exported-modules:
    --   HGeometry.Properties

    -- other-modules:
    -- other-extensions:
    hs-source-dirs:   src
    build-depends:
        hgeometry-point:signatures
-- I wonder if we should create e.g. a 'fractional' library that would export
-- all *.Fractional modules,
--

--------------------------------------------------------------------------------
-- * Signatures for everything that is vector-like.

library signatures
    import:           setup
    visibility: public
    signatures:
      HGeometry.Sigs.Point
      HGeometry.Sigs.Point.Affine

    -- exposed-modules:
      -- HGeometry.Properties

    -- other-modules:
    -- other-extensions:
    hs-source-dirs:   signatures

--------------------------------------------------------------------------------
-- * Point Implementations

-- library newtype
--   import: setup
--   -- visibility: public
--   hs-source-dirs: src_newtype
--   exposed-modules:
--     HGeometry.Point.PointF
--   build-depends:
--       hgeometry-point
--     , hgeometry-point:signatures

--------------------------------------------------------------------------------

-- test-suite hgeometry-point-test
--     import:           setup
--     -- other-modules:
--     -- other-extensions:
--     type:             exitcode-stdio-1.0
--     hs-source-dirs:   test
--     main-is:          Main.hs
--     -- build-depends:
--     --     hgeometry-vector
